# Production values for MMT Helm chart
image:
  repository: yourrepo/mmt-backend
  tag: "0.3.0"
  pullPolicy: Always

# Production resource allocation
resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: 2000m
    memory: 2Gi

# Replica configuration
replicaCount: 3

# Auto-scaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  cpu:
    enabled: true
    targetAverageUtilization: 70
  memory:
    enabled: true
    targetAverageUtilization: 80

# KEDA scaling for queue-based workloads
keda:
  enabled: true
  pollingInterval: 15
  cooldownPeriod: 120
  queueName: transcriptions
  queueLengthTarget: "50"

# Security context (production hardening)
podSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

containerSecurityContext:
  enabled: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  capabilities:
    drop: ["ALL"]
  seccompProfile:
    type: RuntimeDefault

# Network policies
networkPolicy:
  enabled: true
  ingress:
    - from:
      - namespaceSelector:
          matchLabels:
            name: ingress-nginx
      ports:
      - protocol: TCP
        port: 9000
    - from:
      - namespaceSelector:
          matchLabels:
            name: monitoring
      ports:
      - protocol: TCP
        port: 9000

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 9000
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9000"
    prometheus.io/path: "/metrics"

# Ingress configuration
ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
  hosts:
    - host: api.yourdomain.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: mmt-api-tls
      hosts:
        - api.yourdomain.com

# Production environment variables
env:
  ENV: "prod"
  APP_VERSION: "0.3.0"
  
  # Security
  ALLOW_GUEST_AUTH: "false"
  CORS_ALLOW_ORIGINS: "https://yourdomain.com"
  WEBSOCKET_ALLOWED_ORIGINS: "https://yourdomain.com"
  CSP_POLICY: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"
  
  # Features
  ENABLE_CLOUD_TRANSCRIPTION: "true"
  ENABLE_LOCAL_TRANSCRIPTION: "false"  # Disable for cloud-only deployment
  ENABLE_FIELD_ENCRYPTION: "true"
  ENABLE_IDEMPOTENCY: "true"
  
  # Performance
  RATE_LIMIT_PER_MINUTE: "60"
  MAX_UPLOAD_BYTES: "50000000"
  MAX_REQUEST_BODY_BYTES: "60000000"
  ASYNC_MAX_WORKERS: "4"
  ASYNC_QUEUE_MAXSIZE: "100"
  
  # Retention and compliance
  RETENTION_DAYS: "2555"  # 7 years for medical records
  STORE_PHI: "true"
  MASK_PHI_IN_RESPONSES: "false"
  AUDIT_LOG_FILE: "/app/logs/audit.jsonl"
  
  # Monitoring
  SENTRY_TRACES_SAMPLE_RATE: "0.1"

# External dependencies
rabbitmq:
  enabled: false  # Use external RabbitMQ cluster
  external:
    host: "rabbitmq-cluster.infrastructure.svc.cluster.local"
    port: 5672
    username: "mmt_user"
    vhost: "mmt_prod"

redis:
  enabled: false  # Use external Redis cluster
  external:
    host: "redis-cluster.infrastructure.svc.cluster.local"
    port: 6379
    database: 0

mysql:
  enabled: false  # Use external MySQL cluster
  external:
    host: "mysql-cluster.infrastructure.svc.cluster.local"
    port: 3306
    database: "mmt_prod"
    username: "mmt_user"

# Secrets configuration (use external secret management)
secrets:
  enabled: true
  external: true  # Use external secret management (Vault, AWS Secrets Manager)
  
  # Secret references
  database:
    secretName: "mmt-database-credentials"
    keys:
      host: "TRANSCRIPTS_DB_HOST"
      username: "TRANSCRIPTS_DB_USER"
      password: "TRANSCRIPTS_DB_PASSWORD"
      database: "TRANSCRIPTS_DB_NAME"
  
  jwt:
    secretName: "mmt-jwt-secrets"
    keys:
      secret: "INTERNAL_JWT_SECRET"
      privateKey: "INTERNAL_JWT_PRIVATE_KEY_PEM"
      publicKey: "INTERNAL_JWT_PUBLIC_KEY_PEM"
  
  encryption:
    secretName: "mmt-encryption-keys"
    keys:
      keys: "ENCRYPTION_KEYS"
      primaryId: "PRIMARY_ENCRYPTION_KEY_ID"
  
  external:
    secretName: "mmt-external-services"
    keys:
      openai: "OPENAI_API_KEY"
      rabbitmq: "RABBITMQ_URL"
      redis: "REDIS_URL"
      sentry: "SENTRY_DSN"
  
  keycloak:
    secretName: "mmt-keycloak-config"
    keys:
      issuer: "KEYCLOAK_ISSUER"
      jwksUrl: "KEYCLOAK_JWKS_URL"

# Monitoring and observability
serviceMonitor:
  enabled: true
  namespace: monitoring
  interval: 30s
  scrapeTimeout: 10s
  labels:
    app: mmt-backend
    release: prometheus

# Alerting
alerts:
  enabled: true
  namespace: monitoring
  labels:
    app: mmt-backend

# Pod disruption budget
podDisruptionBudget:
  enabled: true
  minAvailable: 2

# Persistent volumes for logs and uploads
persistence:
  logs:
    enabled: true
    size: 10Gi
    storageClass: "fast-ssd"
    mountPath: "/app/logs"
  uploads:
    enabled: true
    size: 50Gi
    storageClass: "standard"
    mountPath: "/app/uploads"

# Backup configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention: "30d"
  destinations:
    - s3://your-backup-bucket/mmt-backups/

# Node affinity (spread across availability zones)
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - mmt
        topologyKey: kubernetes.io/hostname
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      preference:
        matchExpressions:
        - key: node.kubernetes.io/instance-type
          operator: In
          values:
          - m5.large
          - m5.xlarge

# Tolerations for dedicated nodes
tolerations:
- key: "workload"
  operator: "Equal"
  value: "mmt"
  effect: "NoSchedule"