version: '3.8'

services:
  mariadb:
    image: mariadb:10.11
    restart: unless-stopped
    environment:
      MARIADB_ROOT_PASSWORD: root
      MARIADB_USER: openemr
      MARIADB_PASSWORD: openemr
      MARIADB_DATABASE: openemr
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: openemr
      MYSQL_PASSWORD: openemr
      MYSQL_DATABASE: openemr
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./mysql-config:/etc/mysql/conf.d
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mariadb-admin", "ping", "-h", "localhost", "-u", "root", "-proot"]
      interval: 30s
      timeout: 5s
      retries: 3

  openemr:
    image: openemr/openemr:latest
    restart: unless-stopped
    environment:
      OE_USER: admin
      OE_PASS: pass
      OE_SITE: default
      MYSQL_HOST: mariadb
      MYSQL_ROOT_PASS: root
      OE_INSTALL: '1'
      # Enable FHIR API
      FHIR_ENABLED: '1'
      # Enable REST API
      REST_API_ENABLED: '1'
    ports:
      - "8080:80"
    depends_on:
      mariadb:
        condition: service_healthy
    volumes:
      - openemr_sites:/var/www/localhost/htdocs/openemr/sites
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O /dev/null http://localhost/ || exit 1"]
      interval: 60s
      timeout: 5s
      retries: 3

  django-backend:
    build:
      context: ./medtranscribe_backend
      dockerfile: Dockerfile
    image: mmt-django-backend:local
    restart: unless-stopped
    environment:
      DB_NAME: openemr
      DB_USER: openemr
      DB_PASSWORD: openemr
      DB_HOST: mariadb
      DB_PORT: 3306
      DJANGO_SECRET_KEY: "django-insecure--gz6b(fb9a-#sbh*wb-(f54v0oep2o3ri5o%sy=ct(+3f09img"
      DJANGO_DEBUG: "False"
      OPENEMR_BASE_URL: "http://openemr"
      ALLOWED_HOSTS: "localhost,127.0.0.1,django-backend"
    depends_on:
      mariadb:
        condition: service_healthy
      openemr:
        condition: service_healthy
    ports:
      - "8001:8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.13-management
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: mmt-backend:local
    restart: unless-stopped
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672/
      REDIS_URL: redis://redis:6379/0
      RATE_LIMIT_PER_MINUTE: 120
      STORE_PHI: "true"
    depends_on:
      - rabbitmq
      - redis
    ports:
      - "8000:9000"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/health/live || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./app
      dockerfile: Dockerfile.web
    image: mmt-frontend:local
    depends_on:
      - backend
    ports:
      - "3000:80"
    environment:
      API_BASE_URL: http://localhost:8000
    healthcheck:
      test: ["CMD-SHELL", "wget -q -O /dev/null http://localhost/ || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3

volumes:
  mariadb_data:
    driver: local
  openemr_sites:
    driver: local
