name: Build and deploy Flutter web to GitHub Pages

permissions:
  contents: write
  pages: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.6'
          channel: stable

      - name: Install deps
        working-directory: app
        run: flutter pub get

      - name: Build web (capture log)
        working-directory: app
        run: |
          mkdir -p /tmp/build-logs
          flutter build web --base-href /MMT/ 2>&1 | tee /tmp/build-logs/flutter_build.log

      - name: List build output
        run: |
          ls -la app/build/web || true
          du -sh app/build/web || true

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flutter-build-artifacts
          path: |
            app/build/web
            /tmp/build-logs/flutter_build.log

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./app/build/web
          publish_branch: gh-pages
name: Build and deploy Flutter web to GitHub Pages

permissions:
  contents: write
  pages: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build Flutter web and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.6'
          channel: stable

      - name: Show Flutter & Dart versions
        run: |
          flutter --version || true
          dart --version || true

      - name: Cache Pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.cache/flutter
          key: ${{ runner.os }}-flutter-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-pub-

      - name: Install dependencies (verbose)
        working-directory: app
        run: |
          echo 'Resolving Flutter/Dart dependencies (verbose)'
          flutter pub get --verbose || (echo 'flutter pub get failed'; cat pubspec.yaml; exit 1)
          echo 'pubspec.lock contents:'
          cat pubspec.lock || true

      - name: Analyze Dart/Flutter code
        working-directory: app
        run: |
          echo "Running flutter analyze (make non-fatal so deployment can proceed while diagnostics are gathered)"
          flutter analyze || true

      - name: Run Flutter tests
        working-directory: app
        run: |
          echo "Running flutter tests"
          flutter test --no-pub --coverage || true

      - name: Build Flutter web
        working-directory: app
        env:
          PUBLIC_BACKEND_URL: ${{ secrets.PUBLIC_BACKEND_URL }}
        run: |
          set -o pipefail
          mkdir -p /tmp/build-logs
          exit_code=0
          name: Build and deploy Flutter web to GitHub Pages

          permissions:
            contents: write
            pages: write

          on:
            push:
              branches: [ main ]
            workflow_dispatch:

          jobs:
            build-and-deploy:
              name: Build Flutter web and deploy
              runs-on: ubuntu-latest
              steps:
                - name: Checkout repository
                  uses: actions/checkout@v4

                - name: Set up Flutter
                  uses: subosito/flutter-action@v2
                  with:
                    flutter-version: '3.16.6'
                    channel: stable

                - name: Show Flutter & Dart versions
                  run: |
                    flutter --version || true
                    dart --version || true

                - name: Cache Pub packages
                  uses: actions/cache@v4
                  with:
                    path: |
                      ~/.pub-cache
                      ~/.cache/flutter
                    key: ${{ runner.os }}-flutter-pub-${{ hashFiles('**/pubspec.yaml') }}
                    restore-keys: |
                      ${{ runner.os }}-flutter-pub-

                - name: Install dependencies (verbose)
                  working-directory: app
                  run: |
                    echo 'Resolving Flutter/Dart dependencies (verbose)'
                    flutter pub get --verbose || (echo 'flutter pub get failed'; cat pubspec.yaml; exit 1)
                    echo 'pubspec.lock contents:'
                    cat pubspec.lock || true

                - name: Analyze Dart/Flutter code
                  working-directory: app
                  run: |
                    echo "Running flutter analyze (make non-fatal so deployment can proceed while diagnostics are gathered)"
                    flutter analyze || true

                - name: Run Flutter tests
                  working-directory: app
                  run: |
                    echo "Running flutter tests"
                    flutter test --no-pub --coverage || true

                - name: Build Flutter web
                  working-directory: app
                  env:
                    PUBLIC_BACKEND_URL: ${{ secrets.PUBLIC_BACKEND_URL }}
                  run: |
                    set -o pipefail
                    mkdir -p /tmp/build-logs
                    exit_code=0
                    if [ -n "$PUBLIC_BACKEND_URL" ]; then
                      echo "Building with PUBLIC_BACKEND_URL=$PUBLIC_BACKEND_URL"
                      flutter build web --base-href /MMT/ --dart-define=BASE_URL=$PUBLIC_BACKEND_URL 2>&1 | tee /tmp/build-logs/flutter_build.log || exit_code=$?
                    else
                      echo "Building with default BASE_URL (localhost)"
                      flutter build web --base-href /MMT/ 2>&1 | tee /tmp/build-logs/flutter_build.log || exit_code=$?
                    fi
                    echo "Flutter build exit code: $exit_code"
                    exit $exit_code

                - name: Create .nojekyll (prevent GitHub Pages ignoring files)
                  run: |
                    mkdir -p app/build/web
                    touch app/build/web/.nojekyll

                - name: Diagnostic: show build output
                  if: always()
                  run: |
                    echo "Publish dir: ./app/build/web"
                    echo "Listing files (max 200 lines)"
                    ls -la app/build/web || echo 'build web directory not found'
                    echo "Disk usage for build/web:"
                    du -sh app/build/web || true

                - name: Upload build logs and artifacts
                  if: always()
                  uses: actions/upload-artifact@v4
                  with:
                    name: flutter-build-artifacts
                    path: |
                      app/build/web
                      /tmp/build-logs/flutter_build.log

                - name: Deploy to GitHub Pages
                  uses: peaceiris/actions-gh-pages@v3
                  with:
                    github_token: ${{ secrets.GITHUB_TOKEN }}
                    publish_dir: ./app/build/web
                    publish_branch: gh-pages
                    user_name: github-actions[bot]
                    user_email: 41898282+github-actions[bot]@users.noreply.github.com
            echo "Building with PUBLIC_BACKEND_URL=$PUBLIC_BACKEND_URL"
            flutter build web --base-href /MMT/ --dart-define=BASE_URL=$PUBLIC_BACKEND_URL 2>&1 | tee /tmp/build-logs/flutter_build.log || exit_code=$?
          else
            echo "Building with default BASE_URL (localhost)"
            flutter build web --base-href /MMT/ 2>&1 | tee /tmp/build-logs/flutter_build.log || exit_code=$?
          fi
          echo "Flutter build exit code: $exit_code"
          exit $exit_code

      - name: Create .nojekyll (prevent GitHub Pages ignoring files)
        run: |
          mkdir -p app/build/web
          touch app/build/web/.nojekyll

      - name: Diagnostic: show build output
        if: always()
        run: |
          echo "Publish dir: ./app/build/web"
          echo "Listing files (max 200 lines)"
          ls -la app/build/web || echo 'build web directory not found'
          echo "Disk usage for build/web:"
          du -sh app/build/web || true

      - name: Upload build logs and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flutter-build-artifacts
          path: |
            app/build/web
            /tmp/build-logs/flutter_build.log

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./app/build/web
          publish_branch: gh-pages
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
name: Build and deploy Flutter web to GitHub Pages

permissions:
  contents: write
  pages: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build Flutter web and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          # Pin to a concrete 3.16.x release which includes Dart 3.4+ and matches package SDK constraints
          flutter-version: '3.16.6'
          channel: stable

      - name: Show Flutter & Dart versions
        run: |
          flutter --version || true
          dart --version || true

      - name: Cache Pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.cache/flutter
          key: ${{ runner.os }}-flutter-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-pub-

      - name: Install dependencies (verbose)
        working-directory: app
        run: |
          echo 'Resolving Flutter/Dart dependencies (verbose)'
          flutter pub get --verbose || (echo 'flutter pub get failed'; cat pubspec.yaml; exit 1)
          echo 'pubspec.lock contents:'
          cat pubspec.lock || true

      - name: Analyze Dart/Flutter code
        working-directory: app
        run: |
          echo "Running flutter analyze (make non-fatal so deployment can proceed while diagnostics are gathered)"
          # Run analyze but don't fail the job; keep it verbose for CI logs to help debugging.
          flutter analyze || true

      - name: Run Flutter tests
        working-directory: app
        run: |
          echo "Running flutter tests"
          flutter test --no-pub --coverage || true

      - name: Build Flutter web
        working-directory: app
        env:
          PUBLIC_BACKEND_URL: ${{ secrets.PUBLIC_BACKEND_URL }}
        run: |
          set -o pipefail
          mkdir -p /tmp/build-logs
          exit_code=0
          if [ -n "$PUBLIC_BACKEND_URL" ]; then
            echo "Building with PUBLIC_BACKEND_URL=$PUBLIC_BACKEND_URL"
            flutter build web \
              --base-href /MMT/ \
              --dart-define=BASE_URL=$PUBLIC_BACKEND_URL 2>&1 | tee /tmp/build-logs/flutter_build.log || exit_code=$?
          else
            echo "Building with default BASE_URL (localhost)"
            flutter build web \
              --base-href /MMT/ 2>&1 | tee /tmp/build-logs/flutter_build.log || exit_code=$?
          fi
          echo "Flutter build exit code: $exit_code"
          exit $exit_code

      - name: Create .nojekyll (prevent GitHub Pages ignoring files)
        run: |
          mkdir -p app/build/web
          touch app/build/web/.nojekyll

      - name: Diagnostic: show build output
        if: always()
        run: |
          echo "Publish dir: ./app/build/web"
          echo "Listing files (max 200 lines)" 
          ls -la app/build/web || echo 'build web directory not found'
          echo "Disk usage for build/web:" 
          du -sh app/build/web || true

      - name: Upload build logs and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flutter-build-artifacts
          path: |
            app/build/web
            /tmp/build-logs/flutter_build.log

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./app/build/web
          publish_branch: gh-pages
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
name: Build and deploy Flutter web to GitHub Pages

permissions:
  contents: write
  pages: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build Flutter web and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          # Pin to a concrete 3.16.x release which includes Dart 3.4+ and matches package SDK constraints
          flutter-version: '3.16.6'
          channel: stable

      - name: Show Flutter & Dart versions
        run: |
          flutter --version || true
          dart --version || true

      - name: Cache Pub packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.pub-cache
            ~/.cache/flutter
          key: ${{ runner.os }}-flutter-pub-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-pub-

      - name: Install dependencies (verbose)
        working-directory: app
        run: |
          echo 'Resolving Flutter/Dart dependencies (verbose)'
          flutter pub get --verbose || (echo 'flutter pub get failed'; cat pubspec.yaml; exit 1)
          echo 'pubspec.lock contents:'
          cat pubspec.lock || true

      - name: Analyze Dart/Flutter code
        working-directory: app
        run: |
          echo "Running flutter analyze (make non-fatal so deployment can proceed while diagnostics are gathered)"
          # Run analyze but don't fail the job; keep it verbose for CI logs to help debugging.
          flutter analyze || true

      - name: Run Flutter tests
        working-directory: app
        run: |
          echo "Running flutter tests"
          flutter test --no-pub --coverage || true

      - name: Build Flutter web
        working-directory: app
        env:
          PUBLIC_BACKEND_URL: ${{ secrets.PUBLIC_BACKEND_URL }}
        run: |
          set -o pipefail
          mkdir -p /tmp/build-logs
          exit_code=0
          if [ -n "$PUBLIC_BACKEND_URL" ]; then
            echo "Building with PUBLIC_BACKEND_URL=$PUBLIC_BACKEND_URL"
            flutter build web --base-href /MMT/ --dart-define=BASE_URL=$PUBLIC_BACKEND_URL 2>&1 | tee /tmp/build-logs/flutter_build.log || exit_code=$?
          else
            echo "Building with default BASE_URL (localhost)"
            flutter build web --base-href /MMT/ 2>&1 | tee /tmp/build-logs/flutter_build.log || exit_code=$?
          fi
          echo "Flutter build exit code: $exit_code"
          exit $exit_code

      - name: Create .nojekyll (prevent GitHub Pages ignoring files)
        run: |
          mkdir -p app/build/web
          touch app/build/web/.nojekyll

      - name: Diagnostic: show build output
        if: always()
        run: |
          echo "Publish dir: ./app/build/web"
          echo "Listing files (max 200 lines)" 
          ls -la app/build/web || echo 'build web directory not found'
          echo "Disk usage for build/web:" 
          du -sh app/build/web || true

      - name: Upload build logs and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flutter-build-artifacts
          path: |
            app/build/web
            /tmp/build-logs/flutter_build.log

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./app/build/web
          publish_branch: gh-pages
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com

